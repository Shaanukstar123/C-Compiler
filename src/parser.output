Nonterminals useless in grammar

    unary


State 33 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: multiFunction

    2 multiFunction: defFunction
    3              | multiFunction defFunction

    4 defFunction: dataType T_IDENTIFIER '(' ')' '{' codeBody '}'
    5            | dataType T_IDENTIFIER '(' funcParamList ')' '{' codeBody '}'

    6 funcParamList: funcParam
    7              | funcParamList ',' funcParam

    8 funcParam: dataType T_IDENTIFIER
    9          | dataType '*' T_IDENTIFIER

   10 codeBody: statement
   11         | codeBody statement

   12 statement: declaration
   13          | if
   14          | T_IDENTIFIER '=' expression ';'
   15          | keyword
   16          | loop

   17 if: T_IF '(' expression ')' '{' codeBody '}'
   18   | T_IF '(' expression ')' '{' codeBody '}' T_ELSE '{' codeBody '}'

   19 loop: T_WHILE '(' expression ')' '{' codeBody '}'
   20     | T_WHILE '(' expression ')'

   21 declaration: dataType T_IDENTIFIER ';'
   22            | dataType T_IDENTIFIER '=' expression ';'

   23 dataType: T_INT

   24 keyword: T_RETURN expression ';'

   25 expression: T_NUMVAL
   26           | funcCall
   27           | operation

   28 funcCall: dataType T_IDENTIFIER '(' ')'
   29         | dataType T_IDENTIFIER '(' funcParamList ')'

   30 operation: operation '+' term
   31          | term

   32 term: T_NUMVAL
   33     | T_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 17 18 19 20 28 29
    ')' (41) 4 5 17 18 19 20 28 29
    '*' (42) 9
    '+' (43) 30
    ',' (44) 7
    ';' (59) 14 21 22 24
    '=' (61) 14 22
    '{' (123) 4 5 17 18 19
    '}' (125) 4 5 17 18 19
    error (256)
    T_NUMVAL <integer> (258) 25 32
    T_INT (259) 23
    T_RETURN (260) 24
    T_IDENTIFIER <string> (261) 4 5 8 9 14 21 22 28 29 33
    T_WHILE (262) 19 20
    T_IF (263) 17 18
    T_ELSE (264) 18


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    program <ASTnode> (20)
        on left: 1
        on right: 0
    multiFunction <ASTnode> (21)
        on left: 2 3
        on right: 1 3
    defFunction <ASTnode> (22)
        on left: 4 5
        on right: 2 3
    funcParamList <ASTnode> (23)
        on left: 6 7
        on right: 5 7 29
    funcParam <ASTnode> (24)
        on left: 8 9
        on right: 6 7
    codeBody <ASTnode> (25)
        on left: 10 11
        on right: 4 5 11 17 18 19
    statement <ASTnode> (26)
        on left: 12 13 14 15 16
        on right: 10 11
    if <ASTnode> (27)
        on left: 17 18
        on right: 13
    loop <ASTnode> (28)
        on left: 19 20
        on right: 16
    declaration <ASTnode> (29)
        on left: 21 22
        on right: 12
    dataType <string> (30)
        on left: 23
        on right: 4 5 8 9 21 22 28 29
    keyword <ASTnode> (31)
        on left: 24
        on right: 15
    expression <ASTnode> (32)
        on left: 25 26 27
        on right: 14 17 18 19 20 22 24
    funcCall <ASTnode> (33)
        on left: 28 29
        on right: 26
    operation <ASTnode> (34)
        on left: 30 31
        on right: 27 30
    term <ASTnode> (35)
        on left: 32 33
        on right: 30 31


State 0

    0 $accept: . program $end

    T_INT  shift, and go to state 1

    program        go to state 2
    multiFunction  go to state 3
    defFunction    go to state 4
    dataType       go to state 5


State 1

   23 dataType: T_INT .

    $default  reduce using rule 23 (dataType)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: multiFunction .
    3 multiFunction: multiFunction . defFunction

    T_INT  shift, and go to state 1

    $default  reduce using rule 1 (program)

    defFunction  go to state 7
    dataType     go to state 5


State 4

    2 multiFunction: defFunction .

    $default  reduce using rule 2 (multiFunction)


State 5

    4 defFunction: dataType . T_IDENTIFIER '(' ')' '{' codeBody '}'
    5            | dataType . T_IDENTIFIER '(' funcParamList ')' '{' codeBody '}'

    T_IDENTIFIER  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 multiFunction: multiFunction defFunction .

    $default  reduce using rule 3 (multiFunction)


State 8

    4 defFunction: dataType T_IDENTIFIER . '(' ')' '{' codeBody '}'
    5            | dataType T_IDENTIFIER . '(' funcParamList ')' '{' codeBody '}'

    '('  shift, and go to state 9


State 9

    4 defFunction: dataType T_IDENTIFIER '(' . ')' '{' codeBody '}'
    5            | dataType T_IDENTIFIER '(' . funcParamList ')' '{' codeBody '}'

    T_INT  shift, and go to state 1
    ')'    shift, and go to state 10

    funcParamList  go to state 11
    funcParam      go to state 12
    dataType       go to state 13


State 10

    4 defFunction: dataType T_IDENTIFIER '(' ')' . '{' codeBody '}'

    '{'  shift, and go to state 14


State 11

    5 defFunction: dataType T_IDENTIFIER '(' funcParamList . ')' '{' codeBody '}'
    7 funcParamList: funcParamList . ',' funcParam

    ')'  shift, and go to state 15
    ','  shift, and go to state 16


State 12

    6 funcParamList: funcParam .

    $default  reduce using rule 6 (funcParamList)


State 13

    8 funcParam: dataType . T_IDENTIFIER
    9          | dataType . '*' T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 17
    '*'           shift, and go to state 18


State 14

    4 defFunction: dataType T_IDENTIFIER '(' ')' '{' . codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22

    codeBody     go to state 23
    statement    go to state 24
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 15

    5 defFunction: dataType T_IDENTIFIER '(' funcParamList ')' . '{' codeBody '}'

    '{'  shift, and go to state 30


State 16

    7 funcParamList: funcParamList ',' . funcParam

    T_INT  shift, and go to state 1

    funcParam  go to state 31
    dataType   go to state 13


State 17

    8 funcParam: dataType T_IDENTIFIER .

    $default  reduce using rule 8 (funcParam)


State 18

    9 funcParam: dataType '*' . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 32


State 19

   24 keyword: T_RETURN . expression ';'

    T_NUMVAL      shift, and go to state 33
    T_INT         shift, and go to state 1
    T_IDENTIFIER  shift, and go to state 34

    dataType    go to state 35
    expression  go to state 36
    funcCall    go to state 37
    operation   go to state 38
    term        go to state 39


State 20

   14 statement: T_IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 40


State 21

   19 loop: T_WHILE . '(' expression ')' '{' codeBody '}'
   20     | T_WHILE . '(' expression ')'

    '('  shift, and go to state 41


State 22

   17 if: T_IF . '(' expression ')' '{' codeBody '}'
   18   | T_IF . '(' expression ')' '{' codeBody '}' T_ELSE '{' codeBody '}'

    '('  shift, and go to state 42


State 23

    4 defFunction: dataType T_IDENTIFIER '(' ')' '{' codeBody . '}'
   11 codeBody: codeBody . statement

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22
    '}'           shift, and go to state 43

    statement    go to state 44
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 24

   10 codeBody: statement .

    $default  reduce using rule 10 (codeBody)


State 25

   13 statement: if .

    $default  reduce using rule 13 (statement)


State 26

   16 statement: loop .

    $default  reduce using rule 16 (statement)


State 27

   12 statement: declaration .

    $default  reduce using rule 12 (statement)


State 28

   21 declaration: dataType . T_IDENTIFIER ';'
   22            | dataType . T_IDENTIFIER '=' expression ';'

    T_IDENTIFIER  shift, and go to state 45


State 29

   15 statement: keyword .

    $default  reduce using rule 15 (statement)


State 30

    5 defFunction: dataType T_IDENTIFIER '(' funcParamList ')' '{' . codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22

    codeBody     go to state 46
    statement    go to state 24
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 31

    7 funcParamList: funcParamList ',' funcParam .

    $default  reduce using rule 7 (funcParamList)


State 32

    9 funcParam: dataType '*' T_IDENTIFIER .

    $default  reduce using rule 9 (funcParam)


State 33

   25 expression: T_NUMVAL .
   32 term: T_NUMVAL .

    ')'       reduce using rule 25 (expression)
    ')'       [reduce using rule 32 (term)]
    ';'       reduce using rule 25 (expression)
    ';'       [reduce using rule 32 (term)]
    '+'       reduce using rule 32 (term)
    $default  reduce using rule 25 (expression)


State 34

   33 term: T_IDENTIFIER .

    $default  reduce using rule 33 (term)


State 35

   28 funcCall: dataType . T_IDENTIFIER '(' ')'
   29         | dataType . T_IDENTIFIER '(' funcParamList ')'

    T_IDENTIFIER  shift, and go to state 47


State 36

   24 keyword: T_RETURN expression . ';'

    ';'  shift, and go to state 48


State 37

   26 expression: funcCall .

    $default  reduce using rule 26 (expression)


State 38

   27 expression: operation .
   30 operation: operation . '+' term

    '+'  shift, and go to state 49

    $default  reduce using rule 27 (expression)


State 39

   31 operation: term .

    $default  reduce using rule 31 (operation)


State 40

   14 statement: T_IDENTIFIER '=' . expression ';'

    T_NUMVAL      shift, and go to state 33
    T_INT         shift, and go to state 1
    T_IDENTIFIER  shift, and go to state 34

    dataType    go to state 35
    expression  go to state 50
    funcCall    go to state 37
    operation   go to state 38
    term        go to state 39


State 41

   19 loop: T_WHILE '(' . expression ')' '{' codeBody '}'
   20     | T_WHILE '(' . expression ')'

    T_NUMVAL      shift, and go to state 33
    T_INT         shift, and go to state 1
    T_IDENTIFIER  shift, and go to state 34

    dataType    go to state 35
    expression  go to state 51
    funcCall    go to state 37
    operation   go to state 38
    term        go to state 39


State 42

   17 if: T_IF '(' . expression ')' '{' codeBody '}'
   18   | T_IF '(' . expression ')' '{' codeBody '}' T_ELSE '{' codeBody '}'

    T_NUMVAL      shift, and go to state 33
    T_INT         shift, and go to state 1
    T_IDENTIFIER  shift, and go to state 34

    dataType    go to state 35
    expression  go to state 52
    funcCall    go to state 37
    operation   go to state 38
    term        go to state 39


State 43

    4 defFunction: dataType T_IDENTIFIER '(' ')' '{' codeBody '}' .

    $default  reduce using rule 4 (defFunction)


State 44

   11 codeBody: codeBody statement .

    $default  reduce using rule 11 (codeBody)


State 45

   21 declaration: dataType T_IDENTIFIER . ';'
   22            | dataType T_IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 53
    ';'  shift, and go to state 54


State 46

    5 defFunction: dataType T_IDENTIFIER '(' funcParamList ')' '{' codeBody . '}'
   11 codeBody: codeBody . statement

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22
    '}'           shift, and go to state 55

    statement    go to state 44
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 47

   28 funcCall: dataType T_IDENTIFIER . '(' ')'
   29         | dataType T_IDENTIFIER . '(' funcParamList ')'

    '('  shift, and go to state 56


State 48

   24 keyword: T_RETURN expression ';' .

    $default  reduce using rule 24 (keyword)


State 49

   30 operation: operation '+' . term

    T_NUMVAL      shift, and go to state 57
    T_IDENTIFIER  shift, and go to state 34

    term  go to state 58


State 50

   14 statement: T_IDENTIFIER '=' expression . ';'

    ';'  shift, and go to state 59


State 51

   19 loop: T_WHILE '(' expression . ')' '{' codeBody '}'
   20     | T_WHILE '(' expression . ')'

    ')'  shift, and go to state 60


State 52

   17 if: T_IF '(' expression . ')' '{' codeBody '}'
   18   | T_IF '(' expression . ')' '{' codeBody '}' T_ELSE '{' codeBody '}'

    ')'  shift, and go to state 61


State 53

   22 declaration: dataType T_IDENTIFIER '=' . expression ';'

    T_NUMVAL      shift, and go to state 33
    T_INT         shift, and go to state 1
    T_IDENTIFIER  shift, and go to state 34

    dataType    go to state 35
    expression  go to state 62
    funcCall    go to state 37
    operation   go to state 38
    term        go to state 39


State 54

   21 declaration: dataType T_IDENTIFIER ';' .

    $default  reduce using rule 21 (declaration)


State 55

    5 defFunction: dataType T_IDENTIFIER '(' funcParamList ')' '{' codeBody '}' .

    $default  reduce using rule 5 (defFunction)


State 56

   28 funcCall: dataType T_IDENTIFIER '(' . ')'
   29         | dataType T_IDENTIFIER '(' . funcParamList ')'

    T_INT  shift, and go to state 1
    ')'    shift, and go to state 63

    funcParamList  go to state 64
    funcParam      go to state 12
    dataType       go to state 13


State 57

   32 term: T_NUMVAL .

    $default  reduce using rule 32 (term)


State 58

   30 operation: operation '+' term .

    $default  reduce using rule 30 (operation)


State 59

   14 statement: T_IDENTIFIER '=' expression ';' .

    $default  reduce using rule 14 (statement)


State 60

   19 loop: T_WHILE '(' expression ')' . '{' codeBody '}'
   20     | T_WHILE '(' expression ')' .

    '{'  shift, and go to state 65

    $default  reduce using rule 20 (loop)


State 61

   17 if: T_IF '(' expression ')' . '{' codeBody '}'
   18   | T_IF '(' expression ')' . '{' codeBody '}' T_ELSE '{' codeBody '}'

    '{'  shift, and go to state 66


State 62

   22 declaration: dataType T_IDENTIFIER '=' expression . ';'

    ';'  shift, and go to state 67


State 63

   28 funcCall: dataType T_IDENTIFIER '(' ')' .

    $default  reduce using rule 28 (funcCall)


State 64

    7 funcParamList: funcParamList . ',' funcParam
   29 funcCall: dataType T_IDENTIFIER '(' funcParamList . ')'

    ')'  shift, and go to state 68
    ','  shift, and go to state 16


State 65

   19 loop: T_WHILE '(' expression ')' '{' . codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22

    codeBody     go to state 69
    statement    go to state 24
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 66

   17 if: T_IF '(' expression ')' '{' . codeBody '}'
   18   | T_IF '(' expression ')' '{' . codeBody '}' T_ELSE '{' codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22

    codeBody     go to state 70
    statement    go to state 24
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 67

   22 declaration: dataType T_IDENTIFIER '=' expression ';' .

    $default  reduce using rule 22 (declaration)


State 68

   29 funcCall: dataType T_IDENTIFIER '(' funcParamList ')' .

    $default  reduce using rule 29 (funcCall)


State 69

   11 codeBody: codeBody . statement
   19 loop: T_WHILE '(' expression ')' '{' codeBody . '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22
    '}'           shift, and go to state 71

    statement    go to state 44
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 70

   11 codeBody: codeBody . statement
   17 if: T_IF '(' expression ')' '{' codeBody . '}'
   18   | T_IF '(' expression ')' '{' codeBody . '}' T_ELSE '{' codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22
    '}'           shift, and go to state 72

    statement    go to state 44
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 71

   19 loop: T_WHILE '(' expression ')' '{' codeBody '}' .

    $default  reduce using rule 19 (loop)


State 72

   17 if: T_IF '(' expression ')' '{' codeBody '}' .
   18   | T_IF '(' expression ')' '{' codeBody '}' . T_ELSE '{' codeBody '}'

    T_ELSE  shift, and go to state 73

    $default  reduce using rule 17 (if)


State 73

   18 if: T_IF '(' expression ')' '{' codeBody '}' T_ELSE . '{' codeBody '}'

    '{'  shift, and go to state 74


State 74

   18 if: T_IF '(' expression ')' '{' codeBody '}' T_ELSE '{' . codeBody '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22

    codeBody     go to state 75
    statement    go to state 24
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 75

   11 codeBody: codeBody . statement
   18 if: T_IF '(' expression ')' '{' codeBody '}' T_ELSE '{' codeBody . '}'

    T_INT         shift, and go to state 1
    T_RETURN      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20
    T_WHILE       shift, and go to state 21
    T_IF          shift, and go to state 22
    '}'           shift, and go to state 76

    statement    go to state 44
    if           go to state 25
    loop         go to state 26
    declaration  go to state 27
    dataType     go to state 28
    keyword      go to state 29


State 76

   18 if: T_IF '(' expression ')' '{' codeBody '}' T_ELSE '{' codeBody '}' .

    $default  reduce using rule 18 (if)
